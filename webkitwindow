#!/usr/bin/env python

import sys
import signal

from gi.repository import Gtk, Gdk, WebKit


class StatuslineWindow(Gtk.ApplicationWindow):
	dim = [1920, 22]
	server_uri = 'file:///home/kim/projects/statusline/webroot/index.html'

	def __init__(self, app):
		Gtk.Window.__init__(self, title='statusline', application=app, decorated=False)

		self.set_wmclass('statusline', 'statusline')
		self.move(0, 0)
		self.set_keep_above(True)

		self.set_default_size(*self.dim)
		self.set_size_request(*self.dim)
		self.set_resizable(False)

		self.set_border_width(0)
		self.set_gravity(Gdk.Gravity.STATIC)
		self.set_skip_pager_hint(True)
		self.set_skip_taskbar_hint(True)
		self.set_type_hint(Gdk.WindowTypeHint.DOCK)
		self.stick()

		scrolled_window = Gtk.ScrolledWindow()
		scrolled_window.set_min_content_height(0)

		web_view = WebKit.WebView()
		web_view.props.settings.props.enable_default_context_menu = False
		web_view.load_uri(self.server_uri)

		scrolled_window.add(web_view)
		self.add(scrolled_window)


class StatuslineApplication(Gtk.Application):
	def __init__(self):
		Gtk.Application.__init__(self)

	def do_activate(self):
		win = StatuslineWindow(self)
		win.show_all()

	def do_startup(self):
		Gtk.Application.do_startup(self)


if __name__ == '__main__':
	signal.signal(signal.SIGINT, signal.SIG_DFL)

	app = StatuslineApplication()
	exit_status = app.run(sys.argv)
	sys.exit(exit_status)
